[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cupertino-nvr"
version = "0.1.0"
description = "Distributed Network Video Recorder with AI inference"
authors = [
    {name = "Visiona Team", email = "noreply@visiona.com"}
]
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
keywords = ["nvr", "video", "ai", "yolo", "mqtt", "rtsp", "inference"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Video",
]

dependencies = [
    "click>=8.0.0", # CLI framework
    "paho-mqtt>=1.6.1", # MQTT client
    "pydantic>=2.0.0", # Schema validation
    "numpy>=1.21.0",
    "opencv-python>=4.8.0", # Video processing
    "supervision>=0.16.0", # Detection annotations
    "inference>=0.59.0",
    "python-json-logger>=2.0.0", # Structured JSON logging
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=7.0.0",
    "mypy>=1.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.scripts]
cupertino-nvr = "cupertino_nvr.cli:main"

[project.urls]
Homepage = "https://github.com/visiona/cupertino-nvr"
Documentation = "https://github.com/visiona/cupertino-nvr/wiki"
Repository = "https://github.com/visiona/cupertino-nvr"
Issues = "https://github.com/visiona/cupertino-nvr/issues"

[tool.setuptools]
packages = ["cupertino_nvr", "cupertino_nvr.processor", "cupertino_nvr.wall", "cupertino_nvr.events"]

[tool.setuptools.package-data]
"cupertino_nvr" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["cupertino/nvr"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

